version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-kafka
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://:39092,OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:39092,OUTSIDE://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: 'false'

  kafka2:
    image: confluentinc/cp-kafka
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://:49092,OUTSIDE://:19092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:49092,OUTSIDE://localhost:19092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: 'false'

  kafka3:
    image: confluentinc/cp-kafka
    container_name: kafka3
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://:59092,OUTSIDE://:29092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka3:59092,OUTSIDE://localhost:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: 'false'

  debezium:
    image: debezium/connect:1.8
    environment:
      BOOTSTRAP_SERVERS: kafka1:39092,kafka2:49092,kafka3:59092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      OFFSET_STORAGE_TOPIC: connect_offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      STATUS_STORAGE_TOPIC: connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
    depends_on:
      - postgres
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8083:8083"

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: postgres
    volumes:
      - postgres:/var/lib/postgresql/data

  bastion:
    build:
      context: ../../Bastion
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DEBEZIUM_HOST: http://debezium:8083/connectors
      DATABASE_URL: postgres://postgres:secret@postgres:5432/postgres
      BOOTSTRAP_SERVERS: kafka1:39092,kafka2:49092,kafka3:59092
      APP_ENV: production
      PORT: 3000
      SECURITY_PROTOCOL: PLAINTEXT
    restart: always

volumes:
  postgres: ~