version: "3.9"
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "19092:19092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "Orders:1:1,Payments:1:1,Shipments:1:1,Warehouse:1:1,OrdersValidations:1:1,Users:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./testHelpers/kafka/server-jaas.conf:/opt/kafka/config/server-jaas.conf:ro,z

  debezium:
    image: debezium/connect:1.8
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_status
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: usersDb
    volumes:
      - postgres:/var/lib/postgresql/data

  bastion:
    build:
      context: ./Bastion
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      USERS_CONNECTOR_JSON: '{"name":"users-connector","config":{"connector.class":"io.debezium.connector.postgresql.PostgresConnector","plugin.name":"pgoutput","database.hostname":"postgres","database.port":"5432","database.user":"postgres","database.password":"secret","database.dbname":"usersDb","database.server.name":"postgres","table.include.list":"public.users_outbox_events","database.history.kafka.bootstrap.servers":"kafka:9092","database.history.kafka.topic":"schema-changes.users","slot.name": "users_slot" } }'
      DEBEZIUM_HOST: http://debezium:8083/connectors
      APP_ENV: production
      PORT: 3000
    restart: always

volumes:
  postgres: ~