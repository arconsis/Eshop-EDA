%dev.quarkus.http.port=8087

quarkus.kafka.devservices.enabled=false
quarkus.kafka-streams.application-id=transformer-service
quarkus.kafka-streams.topics=postgres.public.users_outbox_events
quarkus.kafka-streams.application-server=${hostname:localhost}:${quarkus.http.port}
# quarkus.kafka-streams.bootstrap-servers=${KAFKA_BROKERS:localhost:9092}
quarkus.kafka-streams.bootstrap-servers=${KAFKA_BROKERS:localhost:19092}

# kafka.bootstrap.servers=${KAFKA_BROKERS:localhost:9092}
kafka.bootstrap.servers=${KAFKA_BROKERS:localhost:19092}

# streams options
kafka-streams.processing.guarantee=exactly_once
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG
kafka-streams.consumer.heartbeat.interval.ms=200
# Use sub-folder of embedded broker, so it gets cleaned by KafkaResource between re-runs
# This does not work for native tests, manually clean-up /tmp/kafka-streams/temperature-aggregator
%test.kafka-streams.state.dir=target/data/kafka-data/stores
